input {
  beats {
    port => 5044
  }
}

filter {

  if [log][file][path] =~ "/usr/share/jmeter/results" {
    if [message] == "timeStamp,elapsed,label,responseCode,responseMessage,threadName,dataType,success,failureMessage,bytes,sentBytes,grpThreads,allThreads,URL,Latency,IdleTime,Connect" {
            drop { }
    }

    grok {
      match => { "message" => "%{NUMBER:timeStamp},%{NUMBER:elpased},%{DATA:label},%{WORD:responseCode},%{DATA:responseMessage},%{DATA:threadName},%{DATA:dataType},%{WORD:success},%{DATA:failureMessage},%{NUMBER:bytes},%{NUMBER:sentBytes},%{NUMBER:grpThreads},%{NUMBER:allThreads},%{URI:URL},%{NUMBER:Latency},%{NUMBER:IdleTime},%{NUMBER:Connect}" }
    }

    mutate {
      convert => { "elpased" => "integer" }
    }

    date {
          locale => "en"
          match => ["timeStamp", "UNIX_MS"]
          timezone => "Europe/Vienna"
          target => "dateTime"
    }

  }

  if [log][file][path] =~ "spring-boot-logger.log" {

       grok {
           match => { "message" => "%{TIMESTAMP_ISO8601:dateTime} %{LOGLEVEL:level} \[%{DATA:thread}] trace.id=%{WORD:trace.id} transaction.id=%{WORD:transaction.id} %{DATA:logger}: %{GREEDYDATA:logMessage}" }
       }

       if [logger] == "sk.matusko.tutorial.jmeterelasticapm.RequestResponseLoggingInterceptor" {
           grok {
            match => { "logMessage" => "%{DATA:service}, status: %{NUMBER:status}" }
           }
       }

   }


}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    manage_template => false
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}" 
    document_type => "%{[@metadata][type]}" 
  }

   stdout { codec => json }

}




